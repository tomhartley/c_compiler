struct _BinaryHeap {
	BinaryHeapType heap_type;
	BinaryHeapValue *values;
	unsigned int num_values;
	unsigned int alloced_size;
	BinaryHeapCompareFunc compare_func;
};

static int binary_heap_cmp(BinaryHeap *heap, BinaryHeapValue data1,
                           BinaryHeapValue data2)
{
	if (heap->heap_type == BINARY_HEAP_TYPE_MIN) {
		return heap->compare_func(data1, data2);
	} else {
		return -heap->compare_func(data1, data2);
	}
}

BinaryHeap *binary_heap_new(BinaryHeapType heap_type,
                            BinaryHeapCompareFunc compare_func)
{
	BinaryHeap *heap;

	heap = malloc(sizeof(BinaryHeap));

	if (heap == NULL) {
		return NULL;
	}

	heap->heap_type = heap_type;
	heap->num_values = 0;
	heap->compare_func = compare_func;
